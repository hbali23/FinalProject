[
  {
    "objectID": "EDA.html",
    "href": "EDA.html",
    "title": "EDA",
    "section": "",
    "text": "The Behavioral Risk Factor Surveillance System (BRFSS) is an annual health-related telephone survey conducted by the CDC, collecting responses from over 400,000 Americans on health behaviors, chronic conditions, and preventative service use since 1984. For this project, trhe dataset diabetes_binary_health_indicators_BRFSS2015.csv contains 253,680 survey responses from the CDC’s BRFSS 2015. The target variable, Diabetes_binary, has two classes: 0: No diabetes and 1: Prediabetes or diabetes. The dataset has 22 featured variables. In my analysis, I will look into all of the variables except for Diabetes_binary. The variables that will be used in the EDA are the following; HighBP, HighChol, CholCheck, BMI, Smoker, Stroke, HeartDiseaseorAttack, PhysActivity, Fruits, Veggies, HvyAlcoholConsump, AnyHealthcare, NoDocbcCost, GenHlth, MentHlth, PhysHlth, DiffWalk, Sex, Age, Education, and Income.\nThe primary purpose of EDA is to understand the data and its structure, identify patterns, spot anomalies, test hypotheses, and check assumptions. This helps in selecting the right modeling techniques and ensures that the data is clean and suitable for analysis. For this analysis, the ultimate goal of modeling is to build a robust and accurate predictive model that can classify individuals into the two categories of the Diabetes_binary variable (0: No diabetes, 1: Prediabetes or diabetes). This model can then be used to identify individuals at risk and potentially guide public health interventions and strategies."
  },
  {
    "objectID": "EDA.html#introduction",
    "href": "EDA.html#introduction",
    "title": "EDA",
    "section": "",
    "text": "The Behavioral Risk Factor Surveillance System (BRFSS) is an annual health-related telephone survey conducted by the CDC, collecting responses from over 400,000 Americans on health behaviors, chronic conditions, and preventative service use since 1984. For this project, trhe dataset diabetes_binary_health_indicators_BRFSS2015.csv contains 253,680 survey responses from the CDC’s BRFSS 2015. The target variable, Diabetes_binary, has two classes: 0: No diabetes and 1: Prediabetes or diabetes. The dataset has 22 featured variables. In my analysis, I will look into all of the variables except for Diabetes_binary. The variables that will be used in the EDA are the following; HighBP, HighChol, CholCheck, BMI, Smoker, Stroke, HeartDiseaseorAttack, PhysActivity, Fruits, Veggies, HvyAlcoholConsump, AnyHealthcare, NoDocbcCost, GenHlth, MentHlth, PhysHlth, DiffWalk, Sex, Age, Education, and Income.\nThe primary purpose of EDA is to understand the data and its structure, identify patterns, spot anomalies, test hypotheses, and check assumptions. This helps in selecting the right modeling techniques and ensures that the data is clean and suitable for analysis. For this analysis, the ultimate goal of modeling is to build a robust and accurate predictive model that can classify individuals into the two categories of the Diabetes_binary variable (0: No diabetes, 1: Prediabetes or diabetes). This model can then be used to identify individuals at risk and potentially guide public health interventions and strategies."
  },
  {
    "objectID": "EDA.html#data",
    "href": "EDA.html#data",
    "title": "EDA",
    "section": "Data",
    "text": "Data\nUse a relative path to import the data. You likely want to convert a lot of the variables to factors with meaningful level names. Check on missingness, etc\n\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr)\nlibrary(readxl)\n\n\n# Import the data\ndiabetes_data &lt;- read_excel(\"~/Downloads/diabetes_binary_health_indicators_BRFSS2015.xlsm\")\n\n# Convert variables to factors\ndiabetes_data$Diabetes_binary &lt;- factor(diabetes_data$Diabetes_binary, levels = c(0, 1), labels = c(\"No Diabetes\", \"Prediabetes or Diabetes\"))\ndiabetes_data$HighBP &lt;- factor(diabetes_data$HighBP, levels = c(0, 1), labels = c(\"No\", \"Yes\"))\ndiabetes_data$HighChol &lt;- factor(diabetes_data$HighChol, levels = c(0, 1), labels = c(\"No\", \"Yes\"))\ndiabetes_data$CholCheck &lt;- factor(diabetes_data$CholCheck, levels = c(0, 1), labels = c(\"No\", \"Yes\"))\ndiabetes_data$Smoker &lt;- factor(diabetes_data$Smoker, levels = c(0, 1), labels = c(\"No\", \"Yes\"))\ndiabetes_data$Stroke &lt;- factor(diabetes_data$Stroke, levels = c(0, 1), labels = c(\"No\", \"Yes\"))\ndiabetes_data$HeartDiseaseorAttack &lt;- factor(diabetes_data$HeartDiseaseorAttack, levels = c(0, 1), labels = c(\"No\", \"Yes\"))\ndiabetes_data$PhysActivity &lt;- factor(diabetes_data$PhysActivity, levels = c(0, 1), labels = c(\"No\", \"Yes\"))\ndiabetes_data$Fruits &lt;- factor(diabetes_data$Fruits, levels = c(0, 1), labels = c(\"No\", \"Yes\"))\ndiabetes_data$Veggies &lt;- factor(diabetes_data$Veggies, levels = c(0, 1), labels = c(\"No\", \"Yes\"))\ndiabetes_data$HvyAlcoholConsump &lt;- factor(diabetes_data$HvyAlcoholConsump, levels = c(0, 1), labels = c(\"No\", \"Yes\"))\ndiabetes_data$AnyHealthcare &lt;- factor(diabetes_data$AnyHealthcare, levels = c(0, 1), labels = c(\"No\", \"Yes\"))\ndiabetes_data$NoDocbcCost &lt;- factor(diabetes_data$NoDocbcCost, levels = c(0, 1), labels = c(\"No\", \"Yes\"))\ndiabetes_data$DiffWalk &lt;- factor(diabetes_data$DiffWalk, levels = c(0, 1), labels = c(\"No\", \"Yes\"))\ndiabetes_data$Sex &lt;- factor(diabetes_data$Sex, levels = c(0, 1), labels = c(\"Male\", \"Female\"))\ndiabetes_data$GenHlth &lt;- factor(diabetes_data$GenHlth, levels = 1:5, labels = c(\"Excellent\", \"Very Good\", \"Good\", \"Fair\", \"Poor\"))\n\n# Convert Age, Education, and Income to factors with meaningful level names\ndiabetes_data$Age &lt;- factor(diabetes_data$Age, levels = 1:13, labels = c(\"18-24\", \"25-29\", \"30-34\", \"35-39\", \"40-44\", \"45-49\", \"50-54\", \"55-59\", \"60-64\", \"65-69\", \"70-74\", \"75-79\", \"80 or older\"))\ndiabetes_data$Education &lt;- factor(diabetes_data$Education, levels = 1:6, labels = c(\"Never attended school\", \"Elementary\", \"Some high school\", \"High school graduate\", \"Some college\", \"College graduate\"))\ndiabetes_data$Income &lt;- factor(diabetes_data$Income, levels = 1:8, labels = c(\"Less than $10,000\", \"$10,000-$14,999\", \"$15,000-$19,999\", \"$20,000-$24,999\", \"$25,000-$34,999\", \"$35,000-$49,999\", \"$50,000-$74,999\", \"$75,000 or more\"))\n\n# Check for missing values\nmissing_values &lt;- sapply(diabetes_data, function(x) sum(is.na(x)))\n\n# Summary of the dataset\nsummary(diabetes_data)\n\n                Diabetes_binary   HighBP       HighChol     CholCheck   \n No Diabetes            :218334   No :144851   No :146089   No :  9470  \n Prediabetes or Diabetes: 35346   Yes:108829   Yes:107591   Yes:244210  \n                                                                        \n                                                                        \n                                                                        \n                                                                        \n                                                                        \n      BMI        Smoker       Stroke       HeartDiseaseorAttack PhysActivity\n Min.   :12.00   No :141257   No :243388   No :229787           No : 61760  \n 1st Qu.:24.00   Yes:112423   Yes: 10292   Yes: 23893           Yes:191920  \n Median :27.00                                                              \n Mean   :28.38                                                              \n 3rd Qu.:31.00                                                              \n Max.   :98.00                                                              \n                                                                            \n Fruits       Veggies      HvyAlcoholConsump AnyHealthcare NoDocbcCost \n No : 92782   No : 47839   No :239424        No : 12417    No :232326  \n Yes:160898   Yes:205841   Yes: 14256        Yes:241263    Yes: 21354  \n                                                                       \n                                                                       \n                                                                       \n                                                                       \n                                                                       \n      GenHlth         MentHlth         PhysHlth      DiffWalk    \n Excellent:45299   Min.   : 0.000   Min.   : 0.000   No :211005  \n Very Good:89084   1st Qu.: 0.000   1st Qu.: 0.000   Yes: 42675  \n Good     :75646   Median : 0.000   Median : 0.000               \n Fair     :31570   Mean   : 3.185   Mean   : 4.242               \n Poor     :12081   3rd Qu.: 2.000   3rd Qu.: 3.000               \n                   Max.   :30.000   Max.   :30.000               \n                                                                 \n     Sex              Age                        Education     \n Male  :141974   60-64  :33244   Never attended school:   174  \n Female:111706   65-69  :32194   Elementary           :  4043  \n                 55-59  :30832   Some high school     :  9478  \n                 50-54  :26314   High school graduate : 62750  \n                 70-74  :23533   Some college         : 69910  \n                 45-49  :19819   College graduate     :107325  \n                 (Other):87744                                 \n             Income     \n $75,000 or more:90385  \n $50,000-$74,999:43219  \n $35,000-$49,999:36470  \n $25,000-$34,999:25883  \n $20,000-$24,999:20135  \n $15,000-$19,999:15994  \n (Other)        :21594"
  },
  {
    "objectID": "EDA.html#summarizations",
    "href": "EDA.html#summarizations",
    "title": "EDA",
    "section": "Summarizations",
    "text": "Summarizations\nYou should then produce meaningful summary statistics and plots about the data you are working with (especially as it relates to your response).\nAlthough a best practice would be to split the data at hand into a training and testing set first, go ahead and do your EDA on the full data.\nBe sure to have a narrative about what you are exploring and what the summaries and graphs you created say about the relationships in your data.\nDistribution of Target Variable The distribution plot of the Diabetes_binary variable shows the count of individuals with and without diabetes. This plot indicates the prevalence of diabetes in the dataset.\n\n# Bar plot for the target variable\nggplot(diabetes_data, aes(x = Diabetes_binary)) +\n  geom_bar(fill = \"blue\", color = \"black\") +\n  ggtitle(\"Distribution of Diabetes Status\") +\n  xlab(\"Diabetes Status\") +\n  ylab(\"Count\")\n\n\n\n\n\n\n\n\nDistribution of BMI The histogram of BMI by diabetes status shows how BMI values are distributed among individuals with and without diabetes. Typically, higher BMI values are associated with a greater risk of diabetes, and we expect to see a higher concentration of diabetes cases in the higher BMI ranges.\n\n# Histogram of BMI\nggplot(diabetes_data, aes(x = BMI, fill = Diabetes_binary)) +\n  geom_histogram(binwidth = 1, position = \"dodge\", color = \"black\") +\n  ggtitle(\"Distribution of BMI by Diabetes Status\") +\n  xlab(\"BMI\") +\n  ylab(\"Count\") +\n  scale_fill_manual(values = c(\"blue\", \"red\"))\n\n\n\n\n\n\n\n\nRelationship Between Age and Diabetes Status The bar plot of age distribution by diabetes status helps us understand how age influences the likelihood of diabetes. We expect older age groups to have a higher prevalence of diabetes.\n\n# Bar plot for Age distribution by Diabetes Status\nggplot(diabetes_data, aes(x = Age, fill = Diabetes_binary)) +\n  geom_bar(position = \"dodge\", color = \"black\") +\n  ggtitle(\"Age Distribution by Diabetes Status\") +\n  xlab(\"Age Group\") +\n  ylab(\"Count\") +\n  scale_fill_manual(values = c(\"blue\", \"red\")) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\nRelationship Between Physical Activity and Diabetes Status The bar plot for physical activity by diabetes status shows the impact of physical activity on diabetes risk. Regular physical activity is expected to be associated with a lower risk of diabetes.\n\n# Bar plot for Physical Activity by Diabetes Status\nggplot(diabetes_data, aes(x = PhysActivity, fill = Diabetes_binary)) +\n  geom_bar(position = \"dodge\", color = \"black\") +\n  ggtitle(\"Physical Activity by Diabetes Status\") +\n  xlab(\"Physical Activity\") +\n  ylab(\"Count\") +\n  scale_fill_manual(values = c(\"blue\", \"red\"))\n\n\n\n\n\n\n\n\nProportion of Diabetes by Gender and Proportion of Diabetes by General Health. The proportion table shows the distribution of diabetes status by gender. This can help understand if there is a significant difference in diabetes prevalence between males and females.\nThe proportion table for general health by diabetes status indicates how self-reported health status correlates with diabetes. Poor general health is likely associated with a higher prevalence of diabetes\n\n# Proportion of diabetes by gender\nprop_table_gender &lt;- prop.table(table(diabetes_data$Sex, diabetes_data$Diabetes_binary), margin = 1)\nprint(prop_table_gender)\n\n        \n         No Diabetes Prediabetes or Diabetes\n  Male     0.8703213               0.1296787\n  Female   0.8483967               0.1516033\n\n# Proportion of diabetes by general health\nprop_table_genhlth &lt;- prop.table(table(diabetes_data$GenHlth, diabetes_data$Diabetes_binary), margin = 1)\nprint(prop_table_genhlth)\n\n           \n            No Diabetes Prediabetes or Diabetes\n  Excellent  0.97483388              0.02516612\n  Very Good  0.92837098              0.07162902\n  Good       0.82210560              0.17789440\n  Fair       0.68989547              0.31010453\n  Poor       0.62105786              0.37894214\n\n\nDistribution of General Health by Diabetes Status The bar plot for general health by diabetes status visualizes the relationship between self-reported health status and diabetes. We expect to see poorer health statuses associated with a higher prevalence of diabetes.\n\n# Bar plot for General Health by Diabetes Status\nggplot(diabetes_data, aes(x = GenHlth, fill = Diabetes_binary)) +\n  geom_bar(position = \"dodge\", color = \"black\") +\n  ggtitle(\"General Health by Diabetes Status\") +\n  xlab(\"General Health\") +\n  ylab(\"Count\") +\n  scale_fill_manual(values = c(\"blue\", \"red\"))\n\n\n\n\n\n\n\n\nRelationship Between High Blood Pressure and Diabetes Status The bar plot for high blood pressure by diabetes status shows the correlation between hypertension and diabetes. High blood pressure is a known risk factor for diabetes.\n\n# Bar plot for High Blood Pressure by Diabetes Status\nggplot(diabetes_data, aes(x = HighBP, fill = Diabetes_binary)) +\n  geom_bar(position = \"dodge\", color = \"black\") +\n  ggtitle(\"High Blood Pressure by Diabetes Status\") +\n  xlab(\"High Blood Pressure\") +\n  ylab(\"Count\") +\n  scale_fill_manual(values = c(\"blue\", \"red\"))\n\n\n\n\n\n\n\n\nRelationship Between High Cholesterol and Diabetes Status The bar plot for high cholesterol by diabetes status illustrates the relationship between cholesterol levels and diabetes. High cholesterol is often associated with diabetes.\n\n# Bar plot for High Cholesterol by Diabetes Status\nggplot(diabetes_data, aes(x = HighChol, fill = Diabetes_binary)) +\n  geom_bar(position = \"dodge\", color = \"black\") +\n  ggtitle(\"High Cholesterol by Diabetes Status\") +\n  xlab(\"High Cholesterol\") +\n  ylab(\"Count\") +\n  scale_fill_manual(values = c(\"blue\", \"red\"))\n\n\n\n\n\n\n\n\nRelationship Between Smoking and Diabetes Status The bar plot for smoking by diabetes status shows how smoking status relates to diabetes. Smoking is a risk factor for many chronic diseases, including diabetes.\n\n# Bar plot for Smoking by Diabetes Status\nggplot(diabetes_data, aes(x = Smoker, fill = Diabetes_binary)) +\n  geom_bar(position = \"dodge\", color = \"black\") +\n  ggtitle(\"Smoking by Diabetes Status\") +\n  xlab(\"Smoking Status\") +\n  ylab(\"Count\") +\n  scale_fill_manual(values = c(\"blue\", \"red\"))\n\n\n\n\n\n\n\n\nConclusion By analyzing these summary statistics and visualizations, we gain insights into how various factors like BMI, age, and physical activity are related to diabetes. This understanding helps in building a predictive model to identify individuals at risk of diabetes effectively. Further analysis can include more variables and interaction effects to improve model accuracy.\nThese additional summary statistics and visualizations provide further insights into how various health-related factors are associated with diabetes. Understanding these relationships is crucial for building a predictive model that can accurately identify individuals at risk of diabetes. By exploring these variables in depth, we can improve the model’s accuracy and reliability.\nADD THE LINK HERE TO CONNECT TO MODELLING WHEN DONE AND GIVE MORE INSIGHT TO THE TAKEAWAYS OF THE EDA AND Be sure to have a narrative about what you are exploring and what the summaries and graphs you created say about the relationships in your data!!!"
  },
  {
    "objectID": "Modelling.html",
    "href": "Modelling.html",
    "title": "Modelling",
    "section": "",
    "text": "##Basic Introduction Start with a basic introduction (feel free to repeat some things from the other file). –\nLog loss, also known as logistic loss or cross-entropy loss, is a performance metric used to evaluate the accuracy of a classification model, particularly in binary classification problems. It measures the uncertainty of the predictions made by the model, by comparing the predicted probabilities of the target variable to the actual binary outcomes. Log loss penalizes incorrect predictions more heavily when they are confident but wrong, and it rewards correct predictions that are confident. This makes log loss a more nuanced measure than accuracy, which simply calculates the proportion of correct predictions.\nLog loss is particularly useful when dealing with imbalanced datasets, where one class may be significantly more prevalent than the other. In such cases, a model could achieve high accuracy by merely predicting the majority class, but this would not necessarily reflect the model’s true performance in distinguishing between the classes. Log loss addresses this by taking into account the predicted probabilities, ensuring that the model not only predicts the correct class but also assigns a high probability to its predictions. This makes log loss a preferred metric for evaluating models in scenarios where the cost of false positives and false negatives is high, or where we need to understand the confidence of the model’s predictions.\n\n# Load necessary libraries\nlibrary(caret)\n\nLoading required package: ggplot2\n\n\nLoading required package: lattice\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tibble)\nlibrary(readxl)\nlibrary(tidyr)\n\n##Adjust Factor Levels and Set Up Cross-Validation and Log Loss Metric\n\n# Import the data\ndiabetes_data &lt;- read_excel(\"~/Downloads/diabetes_binary_health_indicators_BRFSS2015.xlsm\")\n\n# Convert Diabetes_binary to a factor with two levels\ndiabetes_data$Diabetes_binary &lt;- factor(diabetes_data$Diabetes_binary, levels = c(0, 1))\n\n# Ensure that the factor levels have valid R names\nlevels(diabetes_data$Diabetes_binary) &lt;- make.names(levels(diabetes_data$Diabetes_binary))\n\n# Set seed for reproducibility\nset.seed(123)\n\n# Split the data into training (70%) and test (30%) sets\ntrainIndex &lt;- createDataPartition(diabetes_data$Diabetes_binary, p = 0.7, list = FALSE)\ntrainData &lt;- diabetes_data[trainIndex, ]\ntestData &lt;- diabetes_data[-trainIndex, ]\n\n# Define training control with 5-fold cross-validation and log loss as the metric\ntrain_control &lt;- trainControl(method = \"cv\", number = 5, classProbs = TRUE, summaryFunction = mnLogLoss)\n\n##Model 1: Basic logistic regression with no additional features.\n\n# Model 1: Basic Logistic Regression\nmodel1 &lt;- train(Diabetes_binary ~ ., data = trainData, method = \"glm\", family = \"binomial\",\n                trControl = train_control, metric = \"logLoss\")\n\n##Model 2: Logistic regression with interaction terms.\n\n# Model 2: Logistic Regression with Interaction Terms\nformula_interaction &lt;- Diabetes_binary ~ HighBP * HighChol + CholCheck + BMI + Smoker + Stroke + HeartDiseaseorAttack + PhysActivity + Fruits + Veggies + HvyAlcoholConsump + AnyHealthcare + NoDocbcCost + GenHlth + MentHlth + PhysHlth + DiffWalk + Sex + Age + Education + Income\nmodel2 &lt;- train(formula_interaction, data = trainData, method = \"glm\", family = \"binomial\",\n                trControl = train_control, metric = \"logLoss\")\n\n##Model 3: Logistic regression with polynomial terms.\n\n# Model 3: Logistic Regression with Polynomial Terms\nformula_polynomial &lt;- Diabetes_binary ~ poly(BMI, 2) + poly(Age, 2) + HighBP + HighChol + CholCheck + Smoker + Stroke + HeartDiseaseorAttack + PhysActivity + Fruits + Veggies + HvyAlcoholConsump + AnyHealthcare + NoDocbcCost + GenHlth + MentHlth + PhysHlth + DiffWalk + Sex + Education + Income\nmodel3 &lt;- train(formula_polynomial, data = trainData, method = \"glm\", family = \"binomial\",\n                trControl = train_control, metric = \"logLoss\")\n\n##Compare Models Using Cross-Validation with Log Loss\n\n# Compare Models Using Cross-Validation with Log Loss\nresamples &lt;- resamples(list(Basic = model1, Interaction = model2, Polynomial = model3))\n\n# Extract the mean log loss for each model\nlog_loss_results &lt;- resamples$values %&gt;%\n  select(Resample, contains(\"logLoss\")) %&gt;%\n  pivot_longer(cols = contains(\"logLoss\"), names_to = \"Model\", values_to = \"LogLoss\") %&gt;%\n  group_by(Model) %&gt;%\n  summarize(MeanLogLoss = mean(LogLoss, na.rm = TRUE))\n\n# Print the log loss results\nprint(log_loss_results)\n\n# A tibble: 3 × 2\n  Model               MeanLogLoss\n  &lt;chr&gt;                     &lt;dbl&gt;\n1 Basic~logLoss             0.321\n2 Interaction~logLoss       0.321\n3 Polynomial~logLoss        0.317\n\n# Determine the best model based on the lowest mean log loss\nbest_model_name &lt;- log_loss_results %&gt;% \n  filter(MeanLogLoss == min(MeanLogLoss)) %&gt;% \n  pull(Model)\n\n# Remove \"~logLoss\" from model names\nbest_model_name &lt;- gsub(\"~logLoss\", \"\", best_model_name)\n\n# List of models to compare\nmodels &lt;- list(Basic = model1, Interaction = model2, Polynomial = model3)\n\nThe model with the lowest log loss value is generally the best, as it indicates better performance in predicting class probabilities. Here the best performing model is the polynomial model.\n##Evaluate the Best Model on the Test Set\n\n# Select the best model\nbest_model &lt;- models[[best_model_name]]\nprint(best_model)\n\nGeneralized Linear Model \n\n177577 samples\n    21 predictor\n     2 classes: 'X0', 'X1' \n\nNo pre-processing\nResampling: Cross-Validated (5 fold) \nSummary of sample sizes: 142061, 142061, 142063, 142062, 142061 \nResampling results:\n\n  logLoss  \n  0.3165827\n\n# Evaluate the Best Model on the Test Set\npredictions &lt;- predict(best_model, newdata = testData, type = \"prob\")\n\n# Calculate log loss on the test set\n# Adjust the target names if needed\nactual &lt;- as.numeric(testData$Diabetes_binary) - 1\nlog_loss &lt;- -mean((actual == 1) * log(predictions[,2]) + \n                    (actual == 0) * log(1 - predictions[,2]))\nlog_loss\n\n[1] 0.3126407"
  }
]